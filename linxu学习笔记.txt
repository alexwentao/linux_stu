操作 

Tab键，补齐。两下tab 则是调出所有符合规则的文件
Ctrl +a   跳到结尾
Ctrl +e   跳到结尾
Ctrl +u  删除光标到开头位置
Ctrl +k   删除光标到结尾位置
Ctrl + c   跳出操作
Ctrl + d   退出终端  等于exit
Ctrl+shift+t  新打开一个终端  ctrl+pageup前切换
Esc+.    调用上一个命令的参数
^xx^yy    快速执行上一个命令并把参数由xx换成yy
选中命令 按鼠标中间键   复制+粘贴

Whatis  命令的作用和缩写 

man [1(第一章)] [passwd] 文档        可以 /加关键词搜索标注  按n向下  N向上查询 ^加 关键词，搜索以^以后的东西开头的   按q推出 man就是man page的简写 还有info page 简写为info
man –k [部分关键字]   列出含有关键字的命令 k为 key的简写
man 文件名 可以查看文件的用法

init  切换运行级别 ，每个运行级别开启着不同的服务，每个级别有七个控制台， 
tty   显示控制台     控制台共享服务，服务已经开启不能再次开启
1：目录权限
　　
　　
　　剩下的三组 九个 一组三个  
　　第一组 用户  （所有者）  
　　R
　　Read
　　
　　W
　　Write
　　
　　X
　　执行
　　
　　第二组 组
　　
　　同上
　　
　　第三组 其他（其他所有人）
　　
　　同上
　　
2：更改权限
　　chmod 更改权限
　　
　　chmod u+r,g-r,o=rw 文件名
　　
　　可以用4 2 1 0 分别代表  r w x -   所有755  代表 rwx r-x r-x
　　chmod 743 文件名      则更改问 rwx r-- -wx

　　chown root.root test
　　chown root test
　　chown root:root test
　　
　　chgrp root test

3：目录结构
	
    file 命令 查看文件类型

    - 普通文件  d 目录  b开头  设备块文件   c  设备文件 （字符型鼠标、键盘、tty等） l 快捷方式 软连接


    
	
　　linux 文件属性
　　
　　bin  二进制文件 二进制命令存放地点
　　boot 系统启动文件 
　　dev 设备文件  （硬盘移动硬盘u盘等 device）
　　etc  配置文件 （包含了用户、组、环境变量、网络配置、host等的信息等） 
　　home 用户家目录
　　lib 链接库文件 （相当于del链接库文件）
　　lost+fonud 每个分区都有
　　
　　media 挂载点。系统自动挂载点  u盘插入的时候 打开就会进入media
　　mnt  挂载点  手动挂载点  
　　opt  使用源码包安装软件的时候 一般习惯都会选择安装到opt里面
　　proc 内核参数 虚拟的 不占用大小
　　root root用户的家目录
　　sbin 系统管理员的二进制命令
　　tmp  临时文件
　　usr 相当月windows下的programfiles文件夹 
　　var 日志文件 缓存文件 数据库文件  数据量会比较大，建议装系统的时候挂在一个大的存储分区到此目录下
　　
　　
linux 目录配置
    linux目录配置标准： FHS
    tree 命令 查看目录树
    .  表示当前路径
    .. 表示上一路径
    uname  查看系统名称内核等信息 具体的看 uname --help 
   
　　lsb-release -a 也可以查看信息 还有 cat /etc/redhat-release
　　
　　~ 表示用户的家目录 
    cd 不加参数 可以直接进入用户 “家目录” cd ~ 等于cd
    cd ~tom/  进入tom的家目录
　　
    跳转到上一操作目录   cd -
    跳转到上一级目录     cd ..

要创建a下面的b  但a目前不存在 可以用（p   parent）   mkdir -p   a/b    删除同理（但是需要删除b后a为空才能成功删除a 否则只删除b）


同时创建多个 mkdir -p   a/{b,c,d}


rm -rf   r递归  f   force


$PATH=”/as/a:/b/a”



ls -d 显示文件自身的信息


cp  /root/a /root/xx/yy    若yy为文件夹，则把a拷贝到yy文件夹中  若yy为文件或者不存在   则把a‘尝试’覆盖（不同类型无法覆盖）yy或者拷贝重命名为yy   不会复制文件属性信息（修改时间）  加-p  就可以复制属性信息 preserve
-a可以辅助目录和属性     -rf 强制递归复制全部

-a可以复制目录和属性 


cp -u  /path1/service /path2/service 若加了-u 则path1下面的如果比2下面的新 则覆盖  否则不覆盖    不加u会询问是否覆盖   y则覆盖  不写默认为n



cp 快捷方式的时候  是拷贝的源文件 并不是快捷方式  -d的时候就可以拷贝本身




剪切



mv  选项  /path1/xx   /path2/yy

具体和cp 一样

如何获取文件名和目录名
ls  /boot/grub/grub.conf    文件目录名

basename  /boot/grub/grub.conf        获取目录名

dirname  /boot/grub/grub.conf             获取文件名


查看文本文件方式

    cat 从文件第一行显示 适合查看一些小文件  因为显示大文件浏览费劲  、
    tac  从最后一行显示
    nl  和cat -n效果一样 具体看--help
    
    more 和less
    more +文件      按enter是一行一行的显示  按space是一屏幕一屏幕的显示（注意只能往后翻）
        可以打/后输入查找的关键字 然后回车  可以按n从上网下  按大写的N  自下而上找 按q退出

    less +文件      按enter是一行一行的显示  按space是一屏幕一屏幕的显示 还可以pageup和pagedown，
        home和end开头和结束  可以打/后输入查找的关键字 然后回车  可以按n从上网下  按大写的N  自下而上找

    head +文件 默认查看文件前十行   加 -5 或者-n 5  查看前5行

    tail +文件 显示尾几行  同上   其他 tail -f 或者 tailf  监控功能 显示尾几行并监控随时的变化  ctrl+c退出

     
od 命令 -t c +文件   -t以什么格式 c 阿斯科编码
    strings /bin/ls  也可以显示出文件的内容，并且是能看懂的

创建文件
    touch +文件  如果文件不存在则创建 如果文件存在 则更新文件属性 

umask值 0022  权限过滤值

    本身创建文件权限为666    目录为777   因为有了umask值 过滤   

    0022后三位为022   写成权限为  ---  -w-  -w-  以此过滤 666和777  -可以过滤留下，非-过滤去掉此属性
           rw-  rw-  rw-    rwx  rwx  rwx
    过滤   ---  -w-  -w-    ---  -w-  -w-

    得到   rw-  r--  r--    rwx  r-x  r-x     文件的同理
           6    4    4      7    5    5
    
    所以创建的文件权限 为文件644    目录755

    umask -s   保留的权限为什么    
    umask      过滤的权限用字符表示是什么

chattr  更改隐藏文件属性
    
    可以用lsattr查看文件隐藏属性 
    chattr  +a  目录    只能在此文件夹下添加  而不能删除
    chattr  +i  目录    不能更改

文件特殊权限  ：SUID 、SGID 、SBIT
    SUID（这不是个命令）
    chmod u+s xx  当user位置上  有了s权限的时候，其他人执行此文件的时候  拥有所有者的权限

    如果想在一个命令嵌套在其他命令里面中想要输入命令的时候 需要用反引号``，或者$()包含另一个命令  
    比如echo"xxxxxx`hostname`xxxxxx"    或者echo"xxxxxx$(hostname)xxxxxx"
    
    SGID（这不是个命令） 
    chmod g+s xx  当group位置上  有了s权限的时候，
        对于目录而言 在这个目录里面再创建的任何文件和文件夹都会继承xx目录所在的组（原存在的不受影响）

    SBIT

    t只能加载other上，且只能对目录操作
    chmod o+t xx目录  当other位置上  有了t权限的时候，
        在xx目录中 创建的文件 除了所有者和root能够删除 ，其他用户删除不了


    chmod 4644 xx  给u位置加s   
    chmod 2644 xx  给g位置加s
    chmod 1644 xx  给o位置加t



命令与文件的查询

     //脚本文件名的查询
     //文件名的查找
    主要查找命令
    which ls    可以查询ls命令的路径  并提供ls命令的别名
    whereis ls  除了找到二进制文件  还找到了文件的帮助文档 -b 查看二进制文件 -m 查询manpage中相关项

    可以查找命令和文件
    locate    查找原理 是在mlocate.db数据库中查询的 它每天生成一次  可以updatedb 来手动更新此数据库
    locate -i  忽略大小写  其他的自己看--help

    find 目录 -属性 属性值  在目录中查找 如果不写目录为当前目录  属性可以为  name size user等

    find /xx -iname alex   在根目录下  按名字查找alex   i为忽略大小写
    find /xx -user alex      查找所有属于alex的
    find /xx -user alex -group gro     查找所有属于alex的 且属于组 gro的
    find /xx -user alex -or -group gro     查找所有属于alex的 或者属于组 gro的
    find / -uid 500   可以用id来查看用户id   如果alex用户id为500   上面的命令等同于 -user alex
    find / size 4m  文件为4m的    
    find size +2m size -6m    文件大于2m小于6m的
    find -ctime 1  创建时间 单位为一天
    find -ctime +1 创建时间超过一天的
    find -cmin  +1 创建时间超过一分钟的  
    find -newer file1  查看比file文件新的文件    
    
    find /mnt -perm 222 根据权限查找 必须完全匹配
    find /mnt -perm +222   u g o只要有一个有w权限就可以
    find /mnt -perm -222   u g o都要有w权限就可以。有别的权限无所谓
    find /mnt -perm -2   前面的数字 有一个代表的是other  两个代表的是group和other

磁盘与文件系统管理：：
    
    MBR 512b 字节
    分区 
    boot sector  引导分区  


    superblock  超级块   记录的是inode和block的信息  一共有多少个block  使用了多少 剩余多少等
                


    inode  每个放在block的文件 在inode中都会有个记录 指向文件放在哪个block中 并保存其信息属性
           所有者所属组等    每个inode为128字节   每指向一个块消耗4字节  所以一个inode能记录的文件最           大为  128k？？？  其实不是这样 具体在视频 8章（1） 22.40 可以看  其实它并不是直接在inode里面记录某一个文件的信息，它是把inode划分为12个直接区，然后再划分一个间接区、二间接区和三间接区。直接区里面所记录的文件就是直接记录的存储数据。间接区里面指向的block里面存放的是存放数据的block地址，
每个间接区指向的block中可以存放1024个块信息（每个4b），所以间接区可以存放的最大文件为4m。以此类推，二间接区中就可以存放4g。三间接区中就可以放4t。

    block  一个一个的小格子 每个是4k windows下面叫簇 linux下面叫块  
           block为存储文件的地方 当一个block中存放了东西 即使没有填充满 也不能再填写东西了
           格式化分区的时候可以选择每个block的大小     



           block会被分组 block group分别为superblock，             
           文件系统描述信息（每个block group的开始结束位置），
           块位图（块对照表）记录的为哪些block被使用哪些没有被使用，
           然后是inode位图（对照表）记录的为哪些inode被使用哪些没有被使用，
           inode表，
           最后为block
    

    ls -i +文件 可以查看记录这个文件信息的inode编号为多少

    ls -id +文件夹   可以查看文件夹的inode编号。这个编号对应的block里存放的是文件夹下文件的inode编号
  
    filefrag -v +文件  可以查看文件具体的block信息

    dumpe2fs +文件   可以查看superblock和blockgroup的信息


ext3对比ext2来说 增加了日志功能


vfs  虚拟文件系统  可以根据软件需要调用相应的文件系统 ext2 ext3 vfat
    
    df -T 可以查看文件系统类型  加h human 同以往

    du +文件夹  可以显示文件大小和文件内部文件大小 如果只查看本目录 -s

      
    

链接文件    软链接和硬链接

    软链接 相当于快捷方式
    ln -s aa aa1    aa1是aa的快捷方式 s为soft的意思
    
    硬链接  linux和unix中专有的概念  
    ln aa aa1    aa1为aa的硬链接  硬链接的inode信息为相同的，指向的block是相同的，一个文件有了两个名字，因为每个分区都有自己的inode。inode不能跨区 所以硬链接也不能跨区  目录不能创建硬链接
 

    fdisk -l   显示所有的硬盘和分区

    fdisk -l /dev/sda   显示某一个硬盘的分区信息
    fdisk /dev/sda 硬盘分区  具体看 m帮助  t可以改变系统id 每个id对应一个系统类型，改变id相当于改变了类型


 
    MBR分区方法  硬盘最多只能划分四个主分区   MBR区域有512字节 其中446b引导程序 64b是分区表 2b结束符
其标记主分区需要16字节 所以最多只能划分四个主分区，最大容量为2T
    现在所用的为gpt分区，gpt在windows下最多支持128分区（具体看系统），而且最大容量为18 EB  且其启动信息保存多份并在其中一个出错的时候能自动修复，容错率等也大大的增强了。


    分区操作完成应该更新对应硬盘的分区表  
    partprobe /dev/sda   如果不加参数 则更新所有

    分区划分后 需要格式化才能使用   格式化生成block  
    mkfs -t ext3 /dev/sda5 格式化分区为ext3格式 
    mkfs -t ext3 -b 4096 /dev/sda5 指定blocksize为4k
    
    mkfs.ext3 /dev/sda5  格式化分区为ext3格式 等同 mkfs -t ext3

    使用前要挂载，
    
    
    检查磁盘  fsck硬盘分区检查  badblocks硬盘坏道检测
    fsck -f -C /dev/sda5  f为强制检查 C为显示过程
    badblocks -sv /dev/sda5  sv显示检测进度和结果

    磁盘的挂载 
    mount -o 选项 -t 文件系统   系统可以自己识别文件系统
    mount 外部设备 目录
    mount /dev/sda5 /mnt  挂载sda5到mnt下
    卸载
    umount 挂载点或者外部设备     就卸载了 

    mount 命令可以查看现在存在的挂载点
    mount -o remount,-r /mnt  只读形式重新挂载 rw为读写 默认为此形式
    mount -o remount，noexec /mnt  没有执行权限的挂载  exec为执行

    卸载分区的时候 有时候正在使用分区
    fuser -mv /mnt 可以查看哪个进程正在使用
    
    mount是临时挂载
    开机自动挂载 vim /etc/fstab  中写入挂载命令
    最左面设备名 然后是挂载点、文件系统、默认权限、是否做备份0为否  是否使用fsck进行检查 0为检查
    
    磁盘参数修改和查看
    tune2fs -l /dev/sda5 查看信息和修改
    tune2fs -c 100 /mnt/sda5 修改最大挂载次数 达到最大挂载次数之后会自检
    e2lavel /dev/sda5 可以查看卷标   后面加卷标可以更改

    挂载镜像iso文件一定要加loop 
    mount -o loop xx.iso /mnt
    自动挂载在  /etc/fstab中 挂载点  文件系统类型为iso9660  权限defaults,loop
    
    交换分区  硬盘空间模拟内存在linux中也叫虚拟内存
    cat /proc/swaps 查看交换分区
    mkswqp /dev/sda6  创建格式化为交换分区 需要用swqpon /dev/sda6激活 关闭为swapoff
    如果开机就想使用 还是在
    开机自动运行文件  vim /etc/fstab  中写入 挂载点是swap 文件系统也是swap
    mount LABLE==yy /mnt  把卷标为yy的分区挂载到mnt下

 
文件与文件系统的压缩和打包

    linux系统常见的压缩命令 
    compress  技术比较陈旧且没有默认安装 
    compress +文件    -v为显示压缩比例 压缩后源文件消失  uncompress解压
    compress -c -v services > services.z  -c保存源文件

    gzip,zcat     gzip压缩后可以用zcat来查看压缩文件的内容
    -d 解压  -c  hosts > hosts.gz    -c为保留源文件

    bzip2，bzcat 同上 压缩后缀为bz2

    zip  hosts.zip hosts   压缩   unzip hosts.zip
    

    tar  打包  此命令自身不带压缩功能 只能打包 
    tar cvf hosts.tar hosts   f为指明打包好的文件名字 c为创建 v依然为过程
    归档后源文件默认保留，如果需要删除 则 --remove-files
    在不解开打包的情况下查看  tar tvf hosts.tar  t列出归档文件   x可以用来解档
    tar  xvf hosts.tar -C aa/    -C 可以指定解档目录 
    解档一部分文件 tar xvf xx.tar hosts  只解档hosts文件。其他的不解档
    tar 可以调用gzip或者bzip2  归档压缩 tar zcvf xx.tar *     z为压缩  tar    解档也加z
    调用bzip2 加j     -C 可以指定解档目录 后面加文件名可以单独解压
    
    







